{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","id","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["F:\\Programing\\Homework\\Spring-Boot_TeamAir_AirbnbClone_FE\\src\\components\\KakaoMap.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div id=\"map\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { toRaw } from \"vue\";\r\n\r\n  export default {\r\n    name: \"KakaoMap\",\r\n    data() {\r\n      return {\r\n        location: [37.499590490909185, 127.0263723554437],\r\n        marker: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      if (window.kakao && window.kakao.maps) {\r\n        this.initMap();\r\n      } else {\r\n        const script = document.createElement(\"script\");\r\n        /* global kakao */\r\n        script.onload = () => kakao.maps.load(this.initMap);\r\n        script.src =\r\n          \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\r\n        document.head.appendChild(script);\r\n      }\r\n    },\r\n    methods: {\r\n      initMap() {\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n          center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n          level: 3,\r\n        };\r\n  \r\n        this.map = new kakao.maps.Map(container, options);\r\n      },\r\n\r\n\r\n      changeSize(size) {\r\n        const container = document.getElementById(\"map\");\r\n        container.style.width = `${size}px`;\r\n        container.style.height = `${size}px`;\r\n        toRaw(this.map).relayout();\r\n      },\r\n\r\n\r\n      displayMarker() {\r\n        if (!this.marker.length) this.marker = null;\r\n  \r\n        const position = new kakao.maps.LatLng(...location);\r\n  \r\n        this.marker = new kakao.maps.Marker({ map: toRaw(this.map), position });\r\n  \r\n        const bounds = positions.reduce(\r\n        (bounds, latlng) => bounds.extend(latlng),\r\n        new kakao.maps.LatLngBounds()\r\n        );\r\n        const bound = new kakao.maps.LatLngBounds();\r\n        bound.extend(position);\r\n  \r\n        toRaw(this.map).setBounds(bound);\r\n      },\r\n\r\n      \r\n      displayInfoWindow() {\r\n        if (this.infowindow && this.infowindow.getMap()) {\r\n          //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\r\n          toRaw(this.map).setCenter(this.infowindow.getPosition());\r\n          return;\r\n        }\r\n  \r\n        var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n          iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\r\n          iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n  \r\n        this.infowindow = new kakao.maps.InfoWindow({\r\n          map: toRaw(this.map), // 인포윈도우가 표시될 지도\r\n          position: iwPosition,\r\n          content: iwContent,\r\n          removable: iwRemoveable,\r\n        });\r\n  \r\n        toRaw(this.map).setCenter(iwPosition);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style scoped>\r\n  #map {\r\n    width: 400px;\r\n    height: 300px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;gEAEMA,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK;oBAAbC,UAAoB,C;;uBADtBC,mBAAA,CAEM,aAHV,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}