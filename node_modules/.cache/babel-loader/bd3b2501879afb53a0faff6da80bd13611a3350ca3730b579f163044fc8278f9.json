{"ast":null,"code":"import NavBar from '../../components/NavBar/HostNavBar.vue';\nimport CheckBox from '../../components/HostCheckBox.vue';\nimport KakaoMap from '../../components/KakaoMap.vue';\nexport default {\n  name: \"HostingNewRoomView\",\n  components: {\n    NavBar,\n    CheckBox,\n    KakaoMap\n  },\n  data() {\n    return {\n      location: [],\n      mapIsVisible: false\n    };\n  },\n  mounted() {\n    if (!(window.kakao && window.kakao.maps)) {\n      this.geocoderInit();\n    }\n  },\n  methods: {\n    geocoderInit() {\n      const geocoderScript = document.createElement(\"script\");\n      /* global kakao */\n      geocoderScript.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0&libraries=services,clusterer&autoload=false\";\n      document.head.appendChild(geocoderScript);\n    },\n    findAddr() {\n      new window.daum.Postcode({\n        oncomplete: async data => {\n          document.getElementById(\"basicAddr\").value = data.roadAddress || data.jibunAddress;\n          document.getElementById(\"zipNum\").value = data.zonecode;\n          const geocoder = new kakao.maps.services.Geocoder();\n          await geocoder.addressSearch(data.roadAddress || data.jibunAddress, (res, stat) => {\n            if (stat === kakao.maps.services.Status.OK) {\n              const result = new kakao.maps.LatLng(res[0].x, res[0].y);\n              // console.log(result);\n              location = [result.getLng(), result.getLat()];\n              mapIsVisible = true;\n              this.location = [res[0].y, res[0].x];\n              // console.log(this.location);\n              // console.log(this.mapIsVisible);\n              // document.getElementById(\"map\").location = this.location;\n              // console.log(document.getElementById(\"map\").location);\n            } else {\n              alert(\"ERROR: UNKNOWN EXCEPTION.\\n\" + \"to [services.Geocoder]\\n\" + \"from '/api/geocoder.js'\");\n              return null;\n            }\n          });\n        }\n      }).open();\n    },\n    gotoTop() {\n      const gotoTopFunction = () => {\n        const scrollBox = document.getElementsByClassName(\"roomInputBox\")[0];\n        const position = scrollBox?.scrollTop;\n        // const position = document.documentElement.scrollTop || document.body.scrollTop;\n        if (position) {\n          window.requestAnimationFrame(() => {\n            scrollBox.scrollTo(0, position - position / 10);\n            gotoTopFunction();\n          });\n        }\n      };\n      gotoTopFunction();\n    }\n  }\n};","map":{"version":3,"names":["NavBar","CheckBox","KakaoMap","name","components","data","location","mapIsVisible","mounted","window","kakao","maps","geocoderInit","methods","geocoderScript","document","createElement","src","head","appendChild","findAddr","daum","Postcode","oncomplete","getElementById","value","roadAddress","jibunAddress","zonecode","geocoder","services","Geocoder","addressSearch","res","stat","Status","OK","result","LatLng","x","y","getLng","getLat","alert","open","gotoTop","gotoTopFunction","scrollBox","getElementsByClassName","position","scrollTop","requestAnimationFrame","scrollTo"],"sources":["F:\\Programing\\Homework\\Spring-Boot_TeamAir_AirbnbClone_FE\\src\\views\\hostViews\\HostingNewRoomView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <NavBar active=\"room\"/>\r\n        <div class=\"roomInputBox\">\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/structure -->\r\n                <p>숙소 종류</p>\r\n                <select id=\"roomStructure\" class=\"roomInfoSelect\">\r\n                    <option value=\"1\">주택</option>\r\n                    <option value=\"2\">아파트</option>\r\n                    <option value=\"3\">보트</option>\r\n                    <option value=\"4\">통나무집</option>\r\n                    <option value=\"555\">이상한거</option>\r\n                </select>\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/privacy-type -->\r\n                <p>숙소 유형</p>\r\n                <select id=\"roomPrivacyType\" class=\"roomInfoSelect\">\r\n                    <option value=\"1\">공간 전체</option>\r\n                    <option value=\"2\">방</option>\r\n                    <option value=\"3\">다인실</option>\r\n                </select>\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/location -->\r\n                <p>주소 입력</p>\r\n                <p>우편 번호</p>\r\n                <input id=\"zipNum\" \r\n                    @click=\"findAddr\"\r\n                    class=\"roomInfoInputSmall\" type=\"text\" readonly>\r\n                <p>기본 주소</p>\r\n                <input id=\"basicAddr\" \r\n                    @click=\"findAddr\"\r\n                    class=\"roomInfoInputLong\" type=\"text\" readonly>\r\n                <p>상세 주소</p>\r\n                <input id=\"detailAddr\" \r\n                    class=\"roomInfoInputLong\" type=\"text\">\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/location -->\r\n                <p>위치 확인</p>\r\n                <KakaoMap id=\"map\" \r\n                    :width=\"400\" :height=\"300\" \r\n                    v-model:location.sync=\"location\" \r\n                    v-model:isVisible.sync=\"mapIsVisible\"\r\n                />\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/floor-plan -->\r\n                <p>기본 정보</p>\r\n                <div class=\"inputRow\">\r\n                    <div>\r\n                    <p>게스트</p>\r\n                    <input id=\"guestNum\"\r\n                        class=\"roomInfoInputNum\" type=\"number\" value=\"4\">\r\n                    </div>\r\n                    <div>\r\n                    <p>침실</p>\r\n                    <input id=\"bedroomNum\"\r\n                        class=\"roomInfoInputNum\" type=\"number\" value=\"1\">\r\n                    </div>\r\n                    <div>\r\n                    <p>침대</p>\r\n                    <input id=\"bedNum\"\r\n                        class=\"roomInfoInputNum\" type=\"number\" value=\"2\">\r\n                    </div>\r\n                    <div>\r\n                    <p>욕실</p>\r\n                    <input id=\"BathroomNum\"\r\n                        class=\"roomInfoInputNum\" type=\"number\" value=\"1\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n\r\n            \r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/amenities -->\r\n                <p>편의시설 정보</p>\r\n                <p style=\"margin-bottom: 0px; font-weight: bold;\">일반 편의시설</p>\r\n                <div class=\"checkBoxArea\">\r\n                    <CheckBox name=\"wifi\" value=\"Wi-Fi\"/>\r\n                    <CheckBox name=\"tv\" value=\"TV\"/>\r\n                    <CheckBox name=\"kitchen\" value=\"주방\"/>\r\n                    <CheckBox name=\"washing_machine\" value=\"세탁기\"/>\r\n                    <CheckBox name=\"free_parking\" value=\"건물 내 무료 주차\"/>\r\n                    <CheckBox name=\"paid_parking\" value=\"건물 부지 내 유료 주차\"/>\r\n                    <CheckBox name=\"air_conditioner\" value=\"에어컨\"/>\r\n                    <CheckBox name=\"work_space\" value=\"업무 전용 공간\"/>\r\n                </div>\r\n                <p style=\"margin-bottom: 0px; font-weight: bold;\">특별한 편의시설</p>\r\n                <div class=\"checkBoxArea\">\r\n                    <CheckBox name=\"pool\" value=\"수영장\"/>\r\n                    <CheckBox name=\"spa\" value=\"스파 욕조\"/>\r\n                    <CheckBox name=\"patio\" value=\"파티오\"/>\r\n                    <CheckBox name=\"bbq_grill\" value=\"BBQ 그릴\"/>\r\n                    <CheckBox name=\"fire_fit\" value=\"화로\"/>\r\n                    <CheckBox name=\"pool_table\" value=\"당구대\"/>\r\n                    <CheckBox name=\"outside_dining_area\" value=\"야외 식사 공간\"/>\r\n                    <CheckBox name=\"piano\" value=\"피아노\"/>\r\n                    <CheckBox name=\"fitness\" value=\"운동 기구\"/>\r\n                    <CheckBox name=\"fireplace\" value=\"실내 벽난로\"/>\r\n                    <CheckBox name=\"near_lake\" value=\"호수에 인접\"/>\r\n                    <CheckBox name=\"near_beach\" value=\"해변과 인접\"/>\r\n                    <CheckBox name=\"outside_shower\" value=\"야외 샤워 시설\"/>\r\n                </div>\r\n                <p style=\"margin-bottom: 0px; font-weight: bold;\">안전시설</p>\r\n                <div class=\"checkBoxArea\">\r\n                    <CheckBox name=\"fire_alarm\" value=\"화재경보기\"/>\r\n                    <CheckBox name=\"first_aid_kit\" value=\"구급상자\"/>\r\n                    <CheckBox name=\"extinguisher\" value=\"소화기\"/>\r\n                    <CheckBox name=\"co_alarm\" value=\"일산화탄소 경보기\"/>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/photos -->\r\n                <p>사진 추가</p>\r\n                <div class=\"imgBox\">\r\n                    <img src=\"\" alt=\"\">\r\n                    <img src=\"\" alt=\"\">\r\n                    <img src=\"\" alt=\"\">\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/title -->\r\n                <p>숙소 이름</p>\r\n                <input class=\"roomInfoInputLong\" type=\"text\" placeholder=\"숙소 이름은 언제나 변경 가능합니다.\">\r\n            </div>\r\n            <hr>\r\n            <!-- <div class=\"roomInput\">\r\n                <p>태그 선택</p>\r\n            </div>\r\n            <hr> -->\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/description -->\r\n                <p>숙소 설명</p>\r\n                <textarea class=\"roomInfoInputArea\" wrap=\"hard\" placeholder=\"숙소 설명은 언제나 변경 가능합니다.\"></textarea>\r\n            </div>\r\n            <hr>\r\n\r\n            \r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/instant-book -->\r\n                <p>예약 확정 방식</p>\r\n                <div style=\"align-items: start;\">\r\n                    <div class=\"inputRow\">\r\n                        <input type=\"radio\" \r\n                            name=\"reserveType\"\r\n                            id=\"reserve1\"\r\n                            value=\"1\">\r\n                        <label for=\"1\">즉시 예약</label>\r\n                    </div>\r\n                    <div class=\"inputRow\">\r\n                        <input type=\"radio\" \r\n                            name=\"reserveType\"\r\n                            id=\"reserve2\"\r\n                            value=\"2\">\r\n                        <label for=\"2\">확인 후 수락/거절</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <!-- /become-a-host/{host_id}/price -->\r\n                <p>숙박 가격</p>\r\n                <input class=\"roomInfoInputSmall\" type=\"num\" placeholder=\"1박당 가격\">\r\n            </div>\r\n            <hr>\r\n            <div class=\"roomInput\">\r\n                <button class=\"confirmRoom\">숙소 추가하기</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"goTop\"\r\n            @click=\"gotoTop()\">\r\n            ▲\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport NavBar from '../../components/NavBar/HostNavBar.vue'\r\nimport CheckBox from '../../components/HostCheckBox.vue'\r\nimport KakaoMap from '../../components/KakaoMap.vue'\r\n\r\nexport default {\r\n    name: \"HostingNewRoomView\",\r\n    components: {\r\n        NavBar,\r\n        CheckBox,\r\n        KakaoMap,\r\n    },\r\n    data() {\r\n      return {\r\n        location: [],\r\n        mapIsVisible: false,\r\n      };\r\n    },\r\n    mounted() {\r\n        if (!(window.kakao && window.kakao.maps)) {\r\n            this.geocoderInit();\r\n        }\r\n    },\r\n    methods: {\r\n        geocoderInit() {\r\n            const geocoderScript = document.createElement(\"script\");\r\n            /* global kakao */\r\n            geocoderScript.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0&libraries=services,clusterer&autoload=false\";\r\n            document.head.appendChild(geocoderScript);  \r\n        },\r\n        findAddr() {\r\n            new window.daum.Postcode({\r\n                oncomplete: async (data) => {\r\n                    document.getElementById(\"basicAddr\").value = data.roadAddress || data.jibunAddress;\r\n                    document.getElementById(\"zipNum\").value = data.zonecode;\r\n\r\n                    const geocoder = new kakao.maps.services.Geocoder();\r\n                    await geocoder.addressSearch(data.roadAddress || data.jibunAddress, (res, stat) => {\r\n                        if (stat === kakao.maps.services.Status.OK) {\r\n                            const result = new kakao.maps.LatLng(res[0].x, res[0].y);\r\n                            // console.log(result);\r\n                            location = [result.getLng(), result.getLat()];\r\n                            mapIsVisible = true;\r\n                            this.location = [res[0].y, res[0].x];\r\n                            // console.log(this.location);\r\n                            // console.log(this.mapIsVisible);\r\n                            // document.getElementById(\"map\").location = this.location;\r\n                            // console.log(document.getElementById(\"map\").location);\r\n                        } else {\r\n                            alert(\r\n                                \"ERROR: UNKNOWN EXCEPTION.\\n\"+\r\n                                \"to [services.Geocoder]\\n\"+\r\n                                \"from '/api/geocoder.js'\"\r\n                            );\r\n                            return null;\r\n                        }\r\n                    });\r\n                }\r\n            }).open();\r\n        },\r\n        gotoTop() {\r\n            const gotoTopFunction = () => {\r\n                const scrollBox = document.getElementsByClassName(\"roomInputBox\")[0];\r\n                const position = scrollBox?.scrollTop;\r\n                // const position = document.documentElement.scrollTop || document.body.scrollTop;\r\n                if (position) {\r\n                    window.requestAnimationFrame(() => {\r\n                        scrollBox.scrollTo(0, position - position / 10);\r\n                        gotoTopFunction();\r\n                    });\r\n                }\r\n            }\r\n            gotoTopFunction();\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style>\r\n.roomInputBox {\r\n    height: calc(100vh - 90px - 71px);\r\n    padding-top: 30px;\r\n    padding-bottom: 60px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 15px;\r\n    overflow: auto;\r\n}\r\nhr {\r\n    width: 500px; border: 0px; border-bottom: 1px solid lightgrey;\r\n}\r\n.goTop{\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 1px solid rgb(200, 200, 200);\r\n    border-radius: 50vi;\r\n    background-color: rgb(245, 245, 245);\r\n    font-size: 12pt;\r\n    text-align: center;\r\n    line-height: 36px;\r\n    position: fixed;\r\n    bottom: 60px;\r\n    right: 70px;\r\n    cursor: pointer;\r\n}\r\n#map {\r\n    width: 400px;\r\n    height: 300px;\r\n}\r\n\r\n\r\n.roomInput {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n}\r\n.roomInput > p {\r\n    margin: 0px;\r\n    /* margin-top: 5px; */\r\n    margin-bottom: 5px;\r\n    text-align: center;\r\n}\r\n.roomInput > p:nth-child(1) {\r\n    font-size: 14pt;\r\n    font-weight: bold;\r\n}\r\n.checkBoxArea{\r\n    width: 480px;\r\n    display: grid;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: baseline;\r\n    margin-bottom: 6px;\r\n}\r\n.imgBox {\r\n    width: 450px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    gap: 40px;\r\n    margin-top: 10px;\r\n}\r\n.imgBox > img {\r\n    width: 100px;\r\n    height: 100px;\r\n}\r\n.roomInfoSelect{\r\n    width: 140px;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n}\r\ninput {\r\n    border-radius: 5px;\r\n}\r\n.inputRow {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n}\r\n.inputRow > div{\r\n    margin-left: 10px;\r\n    margin-right: 10px\r\n}\r\n.inputRow p {\r\n    margin: 0px;\r\n}\r\n.roomInfoInputNum{\r\n    width: 40px;\r\n    height: fit-content;\r\n    text-align: center;\r\n    -moz-appearance: textfield;\r\n}\r\n.roomInfoInputNum::-webkit-inner-spin-button{\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n}\r\n.roomInfoInputSmall{\r\n    width: 80px;\r\n    height: fit-content;\r\n    text-align: center;\r\n}\r\n.roomInfoInputLong{\r\n    width: 240px;\r\n    height: fit-content;\r\n    text-align: center;\r\n}\r\n.roomInfoInputArea {\r\n    width: 240px;\r\n    height: 54px;\r\n    border-radius: 5px;\r\n    font-size: 10pt;\r\n    font-family: 'Circular',-apple-system,'BlinkMacSystemFont','Roboto','Helvetica Neue',sans-serif;\r\n    resize: none;\r\n}\r\n.inputRow > div > p {\r\n    margin: 0px;\r\n    text-align: center;\r\n}\r\n.confirmRoom {\r\n    width: 120px;\r\n    height: 30px;\r\n    border-radius: 50vi;\r\n    border: 1px solid gray;\r\n    background-color: ghostwhite;\r\n    cursor: pointer;\r\n}\r\n.confirmRoom:hover {\r\n    background-color: whitesmoke;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}