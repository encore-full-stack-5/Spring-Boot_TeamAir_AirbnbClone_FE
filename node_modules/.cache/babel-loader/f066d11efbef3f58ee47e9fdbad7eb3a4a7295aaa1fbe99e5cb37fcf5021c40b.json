{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","id","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["C:\\Users\\Playdata\\Documents\\projects\\spring\\Spring-Boot_TeamAir_AirbnbClone_FE\\src\\components\\KakaoMap.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div id=\"map\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\n\r\nexport default {\r\nname: \"KakaoMap\",\r\ndata() {\r\n    return {\r\n        marker: null,\r\n    };\r\n},\r\nprops: {\r\n    width: {\r\n        type: Number,\r\n        default: 400\r\n    },\r\n    height: {\r\n        type: Number,\r\n        default: 400\r\n    },\r\n    location: {\r\n        type: Array,\r\n        default () { return [] }\r\n    },\r\n    isVisible: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    changeMarkerToCenter: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n},\r\nmounted() {\r\n    this.initSize();\r\n    if (window.kakao && window.kakao.maps) {\r\n        this.initMap();\r\n    } else {\r\n        const script = document.createElement(\"script\");\r\n        /* global kakao */\r\n        script.onload = () => kakao.maps.load(this.initMap);\r\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=61cc89dd5d4f852a57a81b7ffd989ef6\";\r\n        document.head.appendChild(script);\r\n    }\r\n},\r\nmethods: {\r\n    initSize(is = this.isVisible) {\r\n        const container = document.getElementById(\"map\");\r\n        if (is) {\r\n            container.style.width = `${this.width}px`;\r\n            container.style.height = `${this.height}px`;\r\n        } else {\r\n            container.style.width = `0px`;\r\n            container.style.height = `0px`;\r\n        }\r\n        toRaw(this.map)?.relayout();\r\n    },\r\n    \r\n    initMap() {\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 3,\r\n        };\r\n\r\n        this.map = new kakao.maps.Map(container, options);\r\n        this.map.setZoomable(false);\r\n\r\n        console.log(\"1\");\r\n        if (this.changeMarkerToCenter){\r\n            console.log(\"2\");\r\n            kakao.maps.event.addListener(this.map, 'mouseup', () => {\r\n                console.log(\"뿅\");\r\n                const LatLng = this.map.getCenter(); \r\n                console.log(LatLng);\r\n                this.displayMarker([LatLng.getLng(), LatLng.getLat()]);\r\n            });\r\n        }\r\n        console.log(\"3\");\r\n\r\n        this.location.length > 0 && this.displayMarker();\r\n    },\r\n\r\n    displayMarker(l = this.location) {\r\n        // 마커 초기화\r\n        if (this.marker != null) this.marker = null;\r\nconsole.log(l)\r\n        // 마커 하나 설정\r\n        const position = new kakao.maps.LatLng(...l);\r\n        this.marker = new kakao.maps.Marker({ map: toRaw(this.map), position });\r\n\r\n        // // 마커들의 중심 위치로 지도 위치 및 범위 재설정\r\n        // let bounds = new kakao.maps.LatLngBounds();\r\n        // bounds.extend(position);\r\n        // toRaw(this.map).setBounds(bounds);\r\n\r\n        // 지도 중심 재설정\r\n        this.map.setCenter(position);\r\n    },\r\n},\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n    width: 10px;\r\n    height: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n</style>"],"mappings":";;gEAEMA,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK;oBAAbC,UAAoB,C;;uBADtBC,mBAAA,CAEM,aAHV,IAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}