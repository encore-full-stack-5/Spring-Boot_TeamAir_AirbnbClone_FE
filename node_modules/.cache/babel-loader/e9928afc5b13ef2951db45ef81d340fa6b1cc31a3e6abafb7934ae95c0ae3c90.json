{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9bda156e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\"\n})], -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.displayMarker())\n  }, \"test\"), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","id","_createElementBlock","_Fragment","onClick","_cache","$event","$options","displayMarker","_hoisted_1"],"sources":["F:\\Programing\\Homework\\Spring-Boot_TeamAir_AirbnbClone_FE\\src\\components\\KakaoMap.vue"],"sourcesContent":["<template>\r\n    <button @click=\"displayMarker()\">test</button>\r\n    <div>\r\n      <div id=\"map\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { toRaw } from \"vue\";\r\n\r\nexport default {\r\nname: \"KakaoMap\",\r\ndata() {\r\n    return {\r\n    marker: null,\r\n    };\r\n},\r\nprops: {\r\n    width: {\r\n        type: Number,\r\n        default: 400\r\n    },\r\n    height: {\r\n        type: Number,\r\n        default: 400\r\n    },\r\n    location: {\r\n        type: Array,\r\n        default () { return [] }\r\n    },\r\n    isVisible: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n},\r\nmounted() {\r\n    this.initSize();\r\n    if (window.kakao && window.kakao.maps) {\r\n        this.initMap();\r\n    } else {\r\n        const script = document.createElement(\"script\");\r\n        /* global kakao */\r\n        script.onload = () => kakao.maps.load(this.initMap);\r\n        script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\r\n        document.head.appendChild(script);\r\n    }\r\n},\r\nmethods: {\r\n    initSize() {\r\n        const container = document.getElementById(\"map\");\r\n        if (this.isVisible) {\r\n            container.style.width = `${this.width}px`;\r\n            container.style.height = `${this.height}px`;\r\n        } else {\r\n            container.style.width = `0px`;\r\n            container.style.height = `0px`;\r\n        }\r\n        toRaw(this.map)?.relayout();\r\n        return \"345\";\r\n    },\r\n    \r\n    initMap() {\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n        level: 3,\r\n        };\r\n\r\n        this.map = new kakao.maps.Map(container, options);\r\n\r\n        this.location.length > 0 && this.displayMarker();\r\n    },\r\n\r\n    displayMarker() {\r\n        // 마커 초기화\r\n        if (this.marker != null) this.marker = null;\r\n\r\n        // 마커 하나 설정\r\n        const position = new kakao.maps.LatLng(...this.location);\r\n        this.marker = new kakao.maps.Marker({ map: toRaw(this.map), position });\r\n\r\n        // 마커들의 중심 위치로 지도 위치 및 범위 재설정\r\n        let bounds = new kakao.maps.LatLngBounds();\r\n        bounds.extend(position);\r\n        toRaw(this.map).setBounds(bounds);\r\n        return \"123\";\r\n    },\r\n},\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#map {\r\n    width: 10px;\r\n    height: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAEM,c,aADJA,mBAAA,CAAoB;EAAfC,EAAE,EAAC;AAAK,G;;uBAHnBC,mBAAA,CAAAC,SAAA,SACIH,mBAAA,CAA8C;IAArCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa;KAAI,MAAI,GACrCC,UAEM,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}