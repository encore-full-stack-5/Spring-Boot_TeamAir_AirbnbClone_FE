{"ast":null,"code":"import { toRaw } from \"vue\";\nexport default {\n  name: \"KakaoMap\",\n  data() {\n    return {\n      location: [37.499590490909185, 127.0263723554437],\n      marker: null\n    };\n  },\n  mounted() {\n    if (window.kakao && window.kakao.maps) {\n      this.initMap();\n    } else {\n      const script = document.createElement(\"script\");\n      /* global kakao */\n      script.onload = () => kakao.maps.load(this.initMap);\n      script.src = \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\n      document.head.appendChild(script);\n    }\n  },\n  methods: {\n    initMap() {\n      const container = document.getElementById(\"map\");\n      const options = {\n        center: new kakao.maps.LatLng(33.450701, 126.570667),\n        level: 3\n      };\n      this.map = new kakao.maps.Map(container, options);\n    },\n    changeSize(size) {\n      const container = document.getElementById(\"map\");\n      container.style.width = `${size}px`;\n      container.style.height = `${size}px`;\n      toRaw(this.map).relayout();\n    },\n    displayMarker() {\n      if (!this.marker.length) this.marker = null;\n      const position = new kakao.maps.LatLng(...location);\n      this.marker = new kakao.maps.Marker({\n        map: toRaw(this.map),\n        position\n      });\n      const bound = new kakao.maps.LatLngBounds();\n      bound.extend(position);\n      toRaw(this.map).setBounds(bound);\n    },\n    displayInfoWindow() {\n      if (this.infowindow && this.infowindow.getMap()) {\n        //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\n        toRaw(this.map).setCenter(this.infowindow.getPosition());\n        return;\n      }\n      var iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n        // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwPosition = new kakao.maps.LatLng(33.450701, 126.570667),\n        //인포윈도우 표시 위치입니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      this.infowindow = new kakao.maps.InfoWindow({\n        map: toRaw(this.map),\n        // 인포윈도우가 표시될 지도\n        position: iwPosition,\n        content: iwContent,\n        removable: iwRemoveable\n      });\n      toRaw(this.map).setCenter(iwPosition);\n    }\n  }\n};","map":{"version":3,"names":["toRaw","name","data","location","marker","mounted","window","kakao","maps","initMap","script","document","createElement","onload","load","src","head","appendChild","methods","container","getElementById","options","center","LatLng","level","map","Map","changeSize","size","style","width","height","relayout","displayMarker","length","position","Marker","bound","LatLngBounds","extend","setBounds","displayInfoWindow","infowindow","getMap","setCenter","getPosition","iwContent","iwPosition","iwRemoveable","InfoWindow","content","removable"],"sources":["F:\\Programing\\Homework\\Spring-Boot_TeamAir_AirbnbClone_FE\\src\\components\\KakaoMap.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div id=\"map\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { toRaw } from \"vue\";\r\n\r\n  export default {\r\n    name: \"KakaoMap\",\r\n    data() {\r\n      return {\r\n        location: [37.499590490909185, 127.0263723554437],\r\n        marker: null,\r\n      };\r\n    },\r\n    mounted() {\r\n      if (window.kakao && window.kakao.maps) {\r\n        this.initMap();\r\n      } else {\r\n        const script = document.createElement(\"script\");\r\n        /* global kakao */\r\n        script.onload = () => kakao.maps.load(this.initMap);\r\n        script.src =\r\n          \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=915cffed372954b7b44804ed422b9cf0\";\r\n        document.head.appendChild(script);\r\n      }\r\n    },\r\n    methods: {\r\n      initMap() {\r\n        const container = document.getElementById(\"map\");\r\n        const options = {\r\n          center: new kakao.maps.LatLng(33.450701, 126.570667),\r\n          level: 3,\r\n        };\r\n  \r\n        this.map = new kakao.maps.Map(container, options);\r\n      },\r\n\r\n\r\n      changeSize(size) {\r\n        const container = document.getElementById(\"map\");\r\n        container.style.width = `${size}px`;\r\n        container.style.height = `${size}px`;\r\n        toRaw(this.map).relayout();\r\n      },\r\n\r\n\r\n      displayMarker() {\r\n        if (!this.marker.length) this.marker = null;\r\n  \r\n        const position = new kakao.maps.LatLng(...location);\r\n  \r\n        this.marker = new kakao.maps.Marker({ map: toRaw(this.map), position });\r\n  \r\n        const bound = new kakao.maps.LatLngBounds();\r\n        bound.extend(position);\r\n  \r\n        toRaw(this.map).setBounds(bound);\r\n      },\r\n\r\n      \r\n      displayInfoWindow() {\r\n        if (this.infowindow && this.infowindow.getMap()) {\r\n          //이미 생성한 인포윈도우가 있기 때문에 지도 중심좌표를 인포윈도우 좌표로 이동시킨다.\r\n          toRaw(this.map).setCenter(this.infowindow.getPosition());\r\n          return;\r\n        }\r\n  \r\n        var iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n          iwPosition = new kakao.maps.LatLng(33.450701, 126.570667), //인포윈도우 표시 위치입니다\r\n          iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\r\n  \r\n        this.infowindow = new kakao.maps.InfoWindow({\r\n          map: toRaw(this.map), // 인포윈도우가 표시될 지도\r\n          position: iwPosition,\r\n          content: iwContent,\r\n          removable: iwRemoveable,\r\n        });\r\n  \r\n        toRaw(this.map).setCenter(iwPosition);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n  <style scoped>\r\n  #map {\r\n    width: 400px;\r\n    height: 300px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}